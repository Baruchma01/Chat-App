{"ast":null,"code":"import _toConsumableArray from\"/Users/baruchmashasha/Desktop/Chat-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/baruchmashasha/Desktop/Chat-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import classes from\"./Chat.css\";import openSocket from\"socket.io-client\";var socket=openSocket(process.env.REACT_APP_API_URI);console.log(process.env.REACT_APP_API_URI);var Chat=function Chat(_ref){var location=_ref.location;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),msg=_useState2[0],setMsg=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),roomMessage=_useState4[0],setRoomMessage=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),activeUsers=_useState6[0],setActiveUsers=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),currentRoom=_useState8[0],setCurrentRoom=_useState8[1];var _location$state$user=location.state.user,username=_location$state$user.username,room=_location$state$user.room;useEffect(function(){socket.emit(\"joinRoom\",{username:username,room:room});},[]);// Get message from the server\nsocket.on(\"message\",function(message){setRoomMessage([].concat(_toConsumableArray(roomMessage),[message]));});// Get room and users\nsocket.on(\"roomUsers\",function(_ref2){var room=_ref2.room,users=_ref2.users;setActiveUsers(users);setCurrentRoom(room);});var submitMessageHandler=function submitMessageHandler(e){e.preventDefault();if(msg.length===0){alert(\"error: empty msg\");}else{socket.emit(\"chatMessage\",msg);setMsg('');}};var handleMsgChange=function handleMsgChange(e){setMsg(e.target.value);};return/*#__PURE__*/React.createElement(\"div\",{className:classes.ChatContainer},/*#__PURE__*/React.createElement(\"header\",{className:classes.ChatHeader},/*#__PURE__*/React.createElement(\"h1\",null,/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-smile\"}),\" ChatCord\"),/*#__PURE__*/React.createElement(\"a\",{href:\"/\",className:classes.Btn},\"Leave Room\")),/*#__PURE__*/React.createElement(\"main\",{className:classes.ChatMain},/*#__PURE__*/React.createElement(\"div\",{className:classes.ChatSideBar},/*#__PURE__*/React.createElement(\"h3\",null,/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-comments\"}),\" Room Name:\"),/*#__PURE__*/React.createElement(\"h2\",{id:\"room-name\"},currentRoom),/*#__PURE__*/React.createElement(\"h3\",null,/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-users\"}),\" Users\"),/*#__PURE__*/React.createElement(\"ul\",{id:\"users\"},(activeUsers||[]).map(function(user){return/*#__PURE__*/React.createElement(\"li\",{key:user.id},user.username);}))),/*#__PURE__*/React.createElement(\"div\",{className:classes.ChatMessage},(roomMessage||[]).map(function(message){return/*#__PURE__*/React.createElement(\"div\",{key:Math.random(),className:classes.Message},/*#__PURE__*/React.createElement(\"p\",{className:classes.Meta},message.username,\" \",/*#__PURE__*/React.createElement(\"span\",null,message.time)),/*#__PURE__*/React.createElement(\"p\",{className:\"text\"},message.text));}))),/*#__PURE__*/React.createElement(\"div\",{className:classes.ChatFormContainer},/*#__PURE__*/React.createElement(\"form\",{id:\"chat-form\"},/*#__PURE__*/React.createElement(\"input\",{id:\"msg\",type:\"text\",placeholder:\"Enter Message\",value:msg,onChange:handleMsgChange}),/*#__PURE__*/React.createElement(\"button\",{className:classes.Btn,onClick:submitMessageHandler},/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-paper-plane\"}),\" Send\"))));};export default Chat;","map":{"version":3,"sources":["/Users/baruchmashasha/Desktop/Chat-App/client/src/containers/Chat/Chat.js"],"names":["React","useState","useEffect","classes","openSocket","socket","process","env","REACT_APP_API_URI","console","log","Chat","location","msg","setMsg","roomMessage","setRoomMessage","activeUsers","setActiveUsers","currentRoom","setCurrentRoom","state","user","username","room","emit","on","message","users","submitMessageHandler","e","preventDefault","length","alert","handleMsgChange","target","value","ChatContainer","ChatHeader","Btn","ChatMain","ChatSideBar","map","id","ChatMessage","Math","random","Message","Meta","time","text","ChatFormContainer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport classes from \"./Chat.css\";\nimport openSocket from \"socket.io-client\";\nconst socket = openSocket(process.env.REACT_APP_API_URI);\nconsole.log(process.env.REACT_APP_API_URI)\nconst Chat = ({ location }) => {\n  const [msg, setMsg] = useState(\"\");\n  const [roomMessage, setRoomMessage] = useState([]);\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [currentRoom, setCurrentRoom] = useState(\"\");\n\n  const { username, room } = location.state.user;\n\n  useEffect(() => {\n    socket.emit(\"joinRoom\", { username, room });\n  }, []);\n\n  // Get message from the server\n  socket.on(\"message\", (message) => {\n    setRoomMessage([...roomMessage, message]);\n  });\n\n  // Get room and users\n  socket.on(\"roomUsers\", ({ room, users }) => {\n    setActiveUsers(users);\n    setCurrentRoom(room);\n  });\n\n  const submitMessageHandler = (e) => {\n    e.preventDefault();\n    if (msg.length === 0) {\n      alert(\"error: empty msg\");\n    } else {\n      socket.emit(\"chatMessage\", msg);\n      setMsg('');\n    }\n  };\n\n  const handleMsgChange = (e) => {\n    setMsg(e.target.value);\n  };\n\n  return (\n    <div className={classes.ChatContainer}>\n      <header className={classes.ChatHeader}>\n        <h1>\n          <i className=\"fas fa-smile\"></i> ChatCord\n        </h1>\n        <a href=\"/\" className={classes.Btn}>\n          Leave Room\n        </a>\n      </header>\n      <main className={classes.ChatMain}>\n        <div className={classes.ChatSideBar}>\n          <h3>\n            <i className=\"fas fa-comments\"></i> Room Name:\n          </h3>\n          <h2 id=\"room-name\">{currentRoom}</h2>\n          <h3>\n            <i className=\"fas fa-users\"></i> Users\n          </h3>\n          <ul id=\"users\">\n            {(activeUsers || []).map((user) => (\n              <li key={user.id}>{user.username}</li>\n            ))}\n          </ul>\n        </div>\n        <div className={classes.ChatMessage}>\n          {(roomMessage || []).map((message) => (\n            <div key={Math.random()} className={classes.Message}>\n              <p className={classes.Meta}>\n                {message.username} <span>{message.time}</span>\n              </p>\n              <p className=\"text\">{message.text}</p>\n            </div>\n          ))}\n        </div>\n      </main>\n      <div className={classes.ChatFormContainer}>\n        <form id=\"chat-form\">\n          <input\n            id=\"msg\"\n            type=\"text\"\n            placeholder=\"Enter Message\"\n            value={msg}\n            onChange={handleMsgChange}\n          />\n          <button className={classes.Btn} onClick={submitMessageHandler}>\n            <i className=\"fas fa-paper-plane\"></i> Send\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}